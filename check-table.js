const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è NEXT_PUBLIC_SUPABASE_URL –∏/–∏–ª–∏ NEXT_PUBLIC_SUPABASE_ANON_KEY.');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

const checkTable = async () => {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã tenders...\n');
  
  const { data, error } = await supabase
    .from('tenders')
    .select('*')
    .limit(1);
  
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.log('\nüí° –¢–∞–±–ª–∏—Ü–∞ tenders –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
  } else {
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ tenders —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ (–ø–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å):');
    console.log(JSON.stringify(data, null, 2));
  }
};

checkTable();
