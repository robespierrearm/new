'use client';

import { useEffect, useState } from 'react';
import { supabase, Tender, Expense } from '@/lib/supabase';
import { TenderAccounting } from '@/components/TenderAccounting';
import { TrendingUp, TrendingDown, DollarSign, FileText } from 'lucide-react';

interface TenderWithExpenses {
  tender: Tender;
  expenses: Expense[];
}

export default function AccountingPage() {
  const [tendersWithExpenses, setTendersWithExpenses] = useState<TenderWithExpenses[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [expensesTableMissing, setExpensesTableMissing] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const loadData = async () => {
    setIsLoading(true);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–Ω–¥–µ—Ä—ã —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ "–ø–æ–±–µ–¥–∞", "–≤ —Ä–∞–±–æ—Ç–µ", "–∑–∞–≤–µ—Ä—à—ë–Ω"
    const { data: tenders, error: tendersError } = await supabase
      .from('tenders')
      .select('*')
      .in('status', ['–ø–æ–±–µ–¥–∞', '–≤ —Ä–∞–±–æ—Ç–µ', '–∑–∞–≤–µ—Ä—à—ë–Ω'])
      .order('created_at', { ascending: false });

    if (tendersError) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–Ω–¥–µ—Ä–æ–≤:', tendersError);
      setIsLoading(false);
      return;
    }

    if (!tenders || tenders.length === 0) {
      setTendersWithExpenses([]);
      setIsLoading(false);
      return;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö —Ç–µ–Ω–¥–µ—Ä–æ–≤
    const { data: expenses, error: expensesError } = await supabase
      .from('expenses')
      .select('*')
      .in('tender_id', tenders.map(t => t.id));

    if (expensesError) {
      // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ expenses –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–∫–æ–¥ PGRST116 –∏–ª–∏ 42P01), —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
      if (expensesError.code === 'PGRST116' || expensesError.code === '42P01') {
        console.warn('–¢–∞–±–ª–∏—Ü–∞ expenses –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ –µ—ë –≤ Supabase (—Å–º. SETUP_INSTRUCTIONS.md)');
        setExpensesTableMissing(true);
      } else {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤:', expensesError);
      }
    }

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–∞—Å—Ö–æ–¥—ã –ø–æ —Ç–µ–Ω–¥–µ—Ä–∞–º
    const result: TenderWithExpenses[] = tenders.map(tender => ({
      tender,
      expenses: (expenses || []).filter(exp => exp.tender_id === tender.id),
    }));

    setTendersWithExpenses(result);
    setIsLoading(false);
  };

  useEffect(() => {
    loadData();
  }, []);

  // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –¥–æ—Ö–æ–¥ —Å—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–º —Ç–µ–Ω–¥–µ—Ä–∞–º
  const totalIncome = tendersWithExpenses.reduce((sum, item) => {
    if (item.tender.status === '–∑–∞–≤–µ—Ä—à—ë–Ω') {
      return sum + (item.tender.win_price || 0);
    }
    return sum;
  }, 0);
  
  const totalExpenses = tendersWithExpenses.reduce((sum, item) => 
    sum + item.expenses.reduce((expSum, exp) => expSum + exp.amount, 0), 0
  );
  const grossProfit = totalIncome - totalExpenses;
  const totalTax = grossProfit > 0 ? grossProfit * 0.07 : 0;
  const netProfit = grossProfit - totalTax;

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–º–º—ã
  const formatAmount = (amount: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      maximumFractionDigits: 0,
    }).format(amount);
  };

  return (
    <div className="p-4 md:p-8 max-w-7xl mx-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="mb-6 md:mb-8">
        <h1 className="text-xl md:text-2xl font-bold text-gray-900 mb-0.5">–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è</h1>
        <p className="text-xs text-gray-600">
          –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —É—á—ë—Ç –ø–æ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã–º —Ç–µ–Ω–¥–µ—Ä–∞–º (–¥–æ—Ö–æ–¥ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–º)
        </p>
      </div>

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–∞–±–ª–∏—Ü—ã expenses */}
      {expensesTableMissing && (
        <div className="mb-6 bg-orange-50 border border-orange-200 rounded-lg p-4">
          <div className="flex items-start gap-3">
            <div className="flex-shrink-0">
              <svg className="h-5 w-5 text-orange-600" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
              </svg>
            </div>
            <div className="flex-1">
              <h3 className="text-sm font-semibold text-orange-900">–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–î</h3>
              <p className="text-sm text-orange-700 mt-1">
                –¢–∞–±–ª–∏—Ü–∞ <code className="bg-orange-100 px-1 rounded">expenses</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Supabase. 
                –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.
              </p>
              <p className="text-sm text-orange-700 mt-2">
                üìù –û—Ç–∫—Ä–æ–π—Ç–µ <strong>SETUP_INSTRUCTIONS.md</strong> –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –®–∞–≥ 2 (—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã expenses)
              </p>
            </div>
          </div>
        </div>
      )}

      {isLoading ? (
        <div className="text-center py-12">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
          <p className="text-gray-600 mt-4">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
        </div>
      ) : tendersWithExpenses.length === 0 ? (
        <div className="text-center py-12 bg-white rounded-lg border">
          <FileText className="h-16 w-16 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-semibold text-gray-900 mb-2">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</h3>
          <p className="text-gray-600">
            –í—ã–∏–≥—Ä–∞–Ω–Ω—ã–µ —Ç–µ–Ω–¥–µ—Ä—ã –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          </p>
        </div>
      ) : (
        <>
          {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
            <div className="bg-white p-4 rounded-lg border shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600">–í—Å–µ–≥–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤</p>
                  <p className="text-2xl font-bold text-gray-900">{tendersWithExpenses.length}</p>
                </div>
                <FileText className="h-8 w-8 text-blue-600" />
              </div>
            </div>

            <div className="bg-white p-4 rounded-lg border shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600">–û–±—â–∏–π –¥–æ—Ö–æ–¥</p>
                  <p className="text-2xl font-bold text-green-600">{formatAmount(totalIncome)}</p>
                </div>
                <TrendingUp className="h-8 w-8 text-green-600" />
              </div>
            </div>

            <div className="bg-white p-4 rounded-lg border shadow-sm">
              <div className="flex items-center justify-between">
                <div className="flex-1">
                  <p className="text-sm text-gray-600">–û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã</p>
                  <p className="text-2xl font-bold text-red-600">{formatAmount(totalExpenses)}</p>
                  <p className="text-xs text-gray-500 mt-1">
                    –ù–∞–ª–æ–≥ –£–°–ù: <span className="font-medium text-orange-600">{formatAmount(totalTax)}</span>
                  </p>
                </div>
                <TrendingDown className="h-8 w-8 text-red-600" />
              </div>
            </div>

            <div className="bg-white p-4 rounded-lg border shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600">–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å</p>
                  <p className={`text-2xl font-bold ${netProfit > 0 ? 'text-green-600' : netProfit < 0 ? 'text-red-600' : 'text-gray-600'}`}>
                    {formatAmount(netProfit)}
                  </p>
                </div>
                <DollarSign className={`h-8 w-8 ${netProfit > 0 ? 'text-green-600' : netProfit < 0 ? 'text-red-600' : 'text-gray-600'}`} />
              </div>
            </div>
          </div>

          {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-6 rounded-lg border mb-6">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <div className="flex justify-between">
                  <span className="text-gray-700">–í—Å–µ–≥–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤:</span>
                  <span className="font-semibold">{tendersWithExpenses.length}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-700">–û–±—â–∏–π –¥–æ—Ö–æ–¥:</span>
                  <span className="font-semibold text-green-600">{formatAmount(totalIncome)}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-700">–û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã:</span>
                  <span className="font-semibold text-red-600">{formatAmount(totalExpenses)}</span>
                </div>
              </div>
              <div className="space-y-2">
                <div className="flex justify-between">
                  <span className="text-gray-700">–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å:</span>
                  <span className={`font-semibold ${grossProfit > 0 ? 'text-green-600' : 'text-red-600'}`}>
                    {formatAmount(grossProfit)}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-700">–ù–∞–ª–æ–≥–∏ –∫ —É–ø–ª–∞—Ç–µ (7%):</span>
                  <span className="font-semibold text-orange-600">{formatAmount(totalTax)}</span>
                </div>
                <div className="flex justify-between pt-2 border-t border-gray-300">
                  <span className="text-gray-900 font-bold">–ò—Ç–æ–≥–æ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é:</span>
                  <span className={`font-bold text-lg ${netProfit > 0 ? 'text-green-600' : 'text-red-600'}`}>
                    {formatAmount(netProfit)}
                  </span>
                </div>
              </div>
            </div>
          </div>

          {/* –°–ø–∏—Å–æ–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤ —Å accordion */}
          <div className="space-y-4">
            <h2 className="text-lg font-semibold text-gray-900">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —Ç–µ–Ω–¥–µ—Ä–∞–º</h2>
            {tendersWithExpenses.map((item) => (
              <TenderAccounting
                key={item.tender.id}
                tender={item.tender}
                expenses={item.expenses}
                onExpenseAdded={loadData}
                onExpenseDeleted={loadData}
              />
            ))}
          </div>
        </>
      )}
    </div>
  );
}
